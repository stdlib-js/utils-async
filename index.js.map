{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/utils-define-property/lib/define_property.js","../node_modules/@stdlib/utils-define-property/lib/builtin.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_number.js","../node_modules/@stdlib/string-base-format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_double.js","../node_modules/@stdlib/string-base-format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string-base-format-interpolate/lib/main.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_string.js","../node_modules/@stdlib/string-base-format-tokenize/lib/main.js","../node_modules/@stdlib/string-format/lib/main.js","../node_modules/@stdlib/string-format/lib/is_string.js","../node_modules/@stdlib/utils-define-property/lib/polyfill.js","../node_modules/@stdlib/utils-define-property/lib/index.js","../node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils-define-read-only-property/lib/main.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert-is-boolean/lib/primitive.js","../node_modules/@stdlib/assert-has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert-has-symbol-support/lib/main.js","../node_modules/@stdlib/utils-native-class/lib/tostring.js","../node_modules/@stdlib/assert-has-own-property/lib/main.js","../node_modules/@stdlib/symbol-ctor/lib/main.js","../node_modules/@stdlib/utils-native-class/lib/tostringtag.js","../node_modules/@stdlib/utils-native-class/lib/index.js","../node_modules/@stdlib/utils-native-class/lib/polyfill.js","../node_modules/@stdlib/utils-native-class/lib/main.js","../node_modules/@stdlib/boolean-ctor/lib/main.js","../node_modules/@stdlib/assert-is-boolean/lib/tostring.js","../node_modules/@stdlib/assert-is-boolean/lib/object.js","../node_modules/@stdlib/assert-is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert-is-boolean/lib/main.js","../node_modules/@stdlib/assert-is-boolean/lib/index.js","../node_modules/@stdlib/utils-global/lib/self.js","../node_modules/@stdlib/utils-global/lib/window.js","../node_modules/@stdlib/utils-global/lib/global.js","../node_modules/@stdlib/utils-global/lib/global_this.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils-global/lib/main.js","../node_modules/@stdlib/utils-global/lib/codegen.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp-function-name/lib/main.js","../node_modules/@stdlib/regexp-function-name/lib/regexp.js","../node_modules/@stdlib/regexp-function-name/lib/index.js","../node_modules/@stdlib/assert-is-array/lib/main.js","../node_modules/@stdlib/assert-is-object-like/lib/main.js","../node_modules/@stdlib/utils-constructor-name/lib/main.js","../node_modules/@stdlib/assert-is-buffer/lib/main.js","../node_modules/@stdlib/assert-is-object-like/lib/index.js","../node_modules/@stdlib/assert-tools-array-function/lib/main.js","../node_modules/@stdlib/utils-type-of/lib/index.js","../node_modules/@stdlib/utils-type-of/lib/check.js","../node_modules/@stdlib/utils-type-of/lib/polyfill.js","../node_modules/@stdlib/utils-type-of/lib/main.js","../node_modules/@stdlib/assert-is-function/lib/main.js","../node_modules/@stdlib/math-base-special-floor/lib/main.js","../node_modules/@stdlib/math-base-assert-is-integer/lib/main.js","../node_modules/@stdlib/constants-array-max-typed-array-length/lib/index.js","../node_modules/@stdlib/assert-is-collection/lib/main.js","../node_modules/@stdlib/constants-float64-pinf/lib/index.js","../node_modules/@stdlib/object-ctor/lib/main.js","../node_modules/@stdlib/utils-get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils-get-prototype-of/lib/native.js","../node_modules/@stdlib/utils-get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils-get-prototype-of/lib/proto.js","../node_modules/@stdlib/assert-is-plain-object/lib/main.js","../node_modules/@stdlib/assert-is-object/lib/main.js","../node_modules/@stdlib/utils-get-prototype-of/lib/main.js","../node_modules/@stdlib/assert-is-number/lib/primitive.js","../node_modules/@stdlib/number-ctor/lib/main.js","../node_modules/@stdlib/assert-is-number/lib/tostring.js","../node_modules/@stdlib/assert-is-number/lib/object.js","../node_modules/@stdlib/assert-is-number/lib/try2serialize.js","../node_modules/@stdlib/assert-is-number/lib/main.js","../node_modules/@stdlib/assert-is-number/lib/index.js","../node_modules/@stdlib/constants-float64-ninf/lib/index.js","../node_modules/@stdlib/assert-is-integer/lib/integer.js","../node_modules/@stdlib/assert-is-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-integer/lib/object.js","../node_modules/@stdlib/assert-is-integer/lib/main.js","../node_modules/@stdlib/assert-is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-positive-integer/lib/object.js","../node_modules/@stdlib/assert-is-positive-integer/lib/main.js","../node_modules/@stdlib/assert-is-integer/lib/index.js","../node_modules/@stdlib/assert-is-positive-integer/lib/index.js","../node_modules/@stdlib/utils-async-any-by/lib/limit.js","../node_modules/@stdlib/utils-async-any-by/lib/factory.js","../node_modules/@stdlib/utils-async-any-by/lib/validate.js","../node_modules/@stdlib/utils-async-any-by/lib/main.js","../node_modules/@stdlib/utils-async-any-by/lib/index.js","../node_modules/@stdlib/utils-async-any-by-right/lib/limit.js","../node_modules/@stdlib/utils-async-any-by-right/lib/factory.js","../node_modules/@stdlib/utils-async-any-by-right/lib/validate.js","../node_modules/@stdlib/utils-async-any-by-right/lib/main.js","../node_modules/@stdlib/math-base-assert-is-nan/lib/main.js","../node_modules/@stdlib/assert-is-nan/lib/primitive.js","../node_modules/@stdlib/assert-is-nan/lib/object.js","../node_modules/@stdlib/assert-is-nan/lib/main.js","../node_modules/@stdlib/assert-is-string/lib/primitive.js","../node_modules/@stdlib/utils-async-any-by-right/lib/index.js","../node_modules/@stdlib/assert-is-nan/lib/index.js","../node_modules/@stdlib/assert-is-string/lib/valueof.js","../node_modules/@stdlib/assert-is-string/lib/object.js","../node_modules/@stdlib/assert-is-string/lib/try2valueof.js","../node_modules/@stdlib/assert-is-string/lib/main.js","../node_modules/@stdlib/utils-index-of/lib/main.js","../node_modules/@stdlib/assert-is-string/lib/index.js","../node_modules/@stdlib/utils-async-bifurcate-by/lib/validate.js","../node_modules/@stdlib/utils-async-bifurcate-by/lib/limit.js","../node_modules/@stdlib/utils-async-bifurcate-by/lib/factory.js","../node_modules/@stdlib/utils-async-bifurcate-by/lib/main.js","../node_modules/@stdlib/utils-async-bifurcate-by/lib/index.js","../node_modules/@stdlib/utils-async-count-by/lib/limit.js","../node_modules/@stdlib/utils-async-count-by/lib/factory.js","../node_modules/@stdlib/utils-async-count-by/lib/validate.js","../node_modules/@stdlib/utils-async-count-by/lib/main.js","../node_modules/@stdlib/utils-async-count-by/lib/index.js","../node_modules/@stdlib/utils-async-every-by/lib/limit.js","../node_modules/@stdlib/utils-async-every-by/lib/factory.js","../node_modules/@stdlib/utils-async-every-by/lib/validate.js","../node_modules/@stdlib/utils-async-every-by/lib/main.js","../node_modules/@stdlib/utils-async-every-by/lib/index.js","../node_modules/@stdlib/utils-async-every-by-right/lib/limit.js","../node_modules/@stdlib/utils-async-every-by-right/lib/factory.js","../node_modules/@stdlib/utils-async-every-by-right/lib/validate.js","../node_modules/@stdlib/utils-async-every-by-right/lib/main.js","../node_modules/@stdlib/utils-async-every-by-right/lib/index.js","../node_modules/@stdlib/utils-async-for-each/lib/limit.js","../node_modules/@stdlib/utils-async-for-each/lib/factory.js","../node_modules/@stdlib/utils-async-for-each/lib/validate.js","../node_modules/@stdlib/utils-async-for-each/lib/main.js","../node_modules/@stdlib/utils-async-for-each/lib/index.js","../node_modules/@stdlib/utils-async-for-each-right/lib/limit.js","../node_modules/@stdlib/utils-async-for-each-right/lib/factory.js","../node_modules/@stdlib/utils-async-for-each-right/lib/validate.js","../node_modules/@stdlib/utils-async-for-each-right/lib/main.js","../node_modules/@stdlib/utils-async-for-each-right/lib/index.js","../node_modules/@stdlib/utils-async-group-by/lib/validate.js","../node_modules/@stdlib/utils-async-group-by/lib/limit.js","../node_modules/@stdlib/utils-async-group-by/lib/factory.js","../node_modules/@stdlib/utils-async-group-by/lib/main.js","../node_modules/@stdlib/utils-async-group-by/lib/index.js","../node_modules/@stdlib/utils-async-inmap/lib/limit.js","../node_modules/@stdlib/utils-async-inmap/lib/factory.js","../node_modules/@stdlib/utils-async-inmap/lib/validate.js","../node_modules/@stdlib/utils-async-inmap/lib/main.js","../node_modules/@stdlib/utils-async-inmap/lib/index.js","../node_modules/@stdlib/utils-async-inmap-right/lib/limit.js","../node_modules/@stdlib/utils-async-inmap-right/lib/factory.js","../node_modules/@stdlib/utils-async-inmap-right/lib/validate.js","../node_modules/@stdlib/utils-async-inmap-right/lib/main.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/utils-async-inmap-right/lib/index.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/utils-async-map-function/lib/limit.js","../node_modules/@stdlib/utils-async-map-function/lib/factory.js","../node_modules/@stdlib/utils-async-map-function/lib/validate.js","../node_modules/@stdlib/utils-async-map-function/lib/main.js","../node_modules/@stdlib/utils-keys/lib/builtin.js","../node_modules/@stdlib/utils-async-map-function/lib/index.js","../node_modules/@stdlib/utils-keys/lib/has_builtin.js","../node_modules/@stdlib/assert-is-arguments/lib/detect.js","../node_modules/@stdlib/assert-is-arguments/lib/main.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert-is-arguments/lib/index.js","../node_modules/@stdlib/assert-is-arguments/lib/polyfill.js","../node_modules/@stdlib/constants-uint32-max/lib/index.js","../node_modules/@stdlib/utils-keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils-keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils-noop/lib/main.js","../node_modules/@stdlib/utils-keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils-keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils-keys/lib/window.js","../node_modules/@stdlib/utils-keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils-keys/lib/has_window.js","../node_modules/@stdlib/utils-keys/lib/main.js","../node_modules/@stdlib/utils-keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils-keys/lib/polyfill.js","../node_modules/@stdlib/utils-keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/utils-async-map-keys/lib/limit.js","../node_modules/@stdlib/utils-async-map-keys/lib/factory.js","../node_modules/@stdlib/utils-async-map-keys/lib/validate.js","../node_modules/@stdlib/utils-async-map-keys/lib/main.js","../node_modules/@stdlib/utils-async-map-keys/lib/index.js","../node_modules/@stdlib/utils-async-map-values/lib/limit.js","../node_modules/@stdlib/utils-async-map-values/lib/factory.js","../node_modules/@stdlib/utils-async-map-values/lib/validate.js","../node_modules/@stdlib/utils-async-map-values/lib/main.js","../node_modules/@stdlib/utils-async-map-values/lib/index.js","../node_modules/@stdlib/utils-async-none-by/lib/limit.js","../node_modules/@stdlib/utils-async-none-by/lib/factory.js","../node_modules/@stdlib/utils-async-none-by/lib/validate.js","../node_modules/@stdlib/utils-async-none-by/lib/main.js","../node_modules/@stdlib/utils-async-none-by/lib/index.js","../node_modules/@stdlib/utils-async-none-by-right/lib/limit.js","../node_modules/@stdlib/utils-async-none-by-right/lib/factory.js","../node_modules/@stdlib/utils-async-none-by-right/lib/validate.js","../node_modules/@stdlib/utils-async-none-by-right/lib/main.js","../node_modules/@stdlib/utils-async-none-by-right/lib/index.js","../node_modules/@stdlib/utils-async-reduce/lib/limit.js","../node_modules/@stdlib/utils-async-reduce/lib/factory.js","../node_modules/@stdlib/utils-async-reduce/lib/validate.js","../node_modules/@stdlib/utils-async-reduce/lib/main.js","../node_modules/@stdlib/utils-async-reduce/lib/index.js","../node_modules/@stdlib/utils-async-reduce-right/lib/limit.js","../node_modules/@stdlib/utils-async-reduce-right/lib/factory.js","../node_modules/@stdlib/utils-async-reduce-right/lib/validate.js","../node_modules/@stdlib/utils-async-reduce-right/lib/main.js","../node_modules/@stdlib/utils-async-reduce-right/lib/index.js","../node_modules/@stdlib/constants-array-max-array-length/lib/index.js","../node_modules/@stdlib/assert-is-function-array/lib/index.js","../node_modules/@stdlib/assert-tools-array-like-function/lib/main.js","../node_modules/@stdlib/assert-is-array-like/lib/main.js","../node_modules/@stdlib/utils-async-series-waterfall/lib/factory.js","../node_modules/@stdlib/utils-async-series-waterfall/lib/main.js","../node_modules/@stdlib/utils-async-series-waterfall/lib/index.js","../node_modules/@stdlib/utils-async-some-by/lib/limit.js","../node_modules/@stdlib/utils-async-some-by/lib/factory.js","../node_modules/@stdlib/utils-async-some-by/lib/validate.js","../node_modules/@stdlib/utils-async-some-by/lib/main.js","../node_modules/@stdlib/utils-async-some-by/lib/index.js","../node_modules/@stdlib/utils-async-some-by-right/lib/limit.js","../node_modules/@stdlib/utils-async-some-by-right/lib/factory.js","../node_modules/@stdlib/utils-async-some-by-right/lib/validate.js","../node_modules/@stdlib/utils-async-some-by-right/lib/main.js","../node_modules/@stdlib/utils-async-some-by-right/lib/index.js","../node_modules/@stdlib/utils-async-tabulate-by/lib/limit.js","../node_modules/@stdlib/utils-async-tabulate-by/lib/factory.js","../node_modules/@stdlib/utils-async-tabulate-by/lib/validate.js","../node_modules/@stdlib/utils-async-tabulate-by/lib/main.js","../node_modules/@stdlib/utils-async-tabulate-by/lib/index.js","../lib/index.js","../node_modules/@stdlib/utils-async-compose/lib/main.js","../node_modules/@stdlib/utils-async-do-until/lib/main.js","../node_modules/@stdlib/utils-async-do-while/lib/main.js","../node_modules/@stdlib/utils-async-function-sequence/lib/main.js","../node_modules/@stdlib/utils-async-if-else/lib/main.js","../node_modules/@stdlib/utils-async-if-then/lib/main.js","../node_modules/@stdlib/utils-async-try-catch/lib/main.js","../node_modules/@stdlib/utils-async-try-then/lib/main.js","../node_modules/@stdlib/utils-async-until/lib/main.js","../node_modules/@stdlib/utils-async-while/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from '@stdlib/string-base-format-interpolate';\nimport tokenize from '@stdlib/string-base-format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils-define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from '@stdlib/assert-has-symbol-support';\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol-ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils-native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils-native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support';\nimport nativeClass from '@stdlib/utils-native-class';\nimport Boolean from '@stdlib/boolean-ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert-is-boolean\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n* import isBoolean from '@stdlib/assert-is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n* import { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean-ctor';\n* import { isObject as isBoolean } from '@stdlib/assert-is-boolean';\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from '@stdlib/utils-global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport format from '@stdlib/string-format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport Global from './global.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp-function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp-function-name';\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class';\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class';\nimport { REGEXP as RE } from '@stdlib/regexp-function-name';\nimport isBuffer from '@stdlib/assert-is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert-is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert-is-object-like';\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert-is-object-like';\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport arrayfun from '@stdlib/assert-tools-array-function';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert-is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils-type-of\n*\n* @example\n* import typeOf from '@stdlib/utils-type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils-type-of';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants-array-max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants-array-max-typed-array-length';\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math-base-assert-is-integer';\nimport MAX_LENGTH from '@stdlib/constants-array-max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants-float64-pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants-float64-pinf';\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-object';\nimport isFunction from '@stdlib/assert-is-function';\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport nativeClass from '@stdlib/utils-native-class';\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object-ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number-ctor';\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support';\nimport nativeClass from '@stdlib/utils-native-class';\nimport Number from '@stdlib/number-ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert-is-number\n*\n* @example\n* import isNumber from '@stdlib/assert-is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert-is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert-is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants-float64-ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants-float64-ninf';\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number-ctor';\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf';\nimport NINF from '@stdlib/constants-float64-ninf';\nimport isInt from '@stdlib/math-base-assert-is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from '@stdlib/assert-is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert-is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert-is-integer';\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert-is-integer';\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert-is-positive-integer\n*\n* @example\n* import isPositiveInteger from '@stdlib/assert-is-positive-integer';\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByAsync( files, predicate, done );\n*/\nfunction anyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* @module @stdlib/utils-async-any-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import anyByAsync from '@stdlib/utils-async-any-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByRightAsync( files, predicate, done );\n*/\nfunction anyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isNan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number';\nimport isNan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils-async-any-by-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import anyByRightAsync from '@stdlib/utils-async-any-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert-is-nan\n*\n* @example\n* import isnan from '@stdlib/assert-is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isnan } from '@stdlib/assert-is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* import { isObject as isnan } from '@stdlib/assert-is-nan';\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support';\nimport nativeClass from '@stdlib/utils-native-class';\nimport test from './try2valueof.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert-is-nan';\nimport isCollection from '@stdlib/assert-is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert-is-string\n*\n* @example\n* import isString from '@stdlib/assert-is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert-is-string';\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert-is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport indexOf from '@stdlib/utils-index-of';\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'bifurcate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tout.push( [], [] );\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, v, cb );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [bool] - group indicator\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, bool ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, ( bool ) ? '0' : '1' );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( j );\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( [ j, v ] );\n\t\t\t\t}\n\t\t\t} else if ( bool ) {\n\t\t\t\tout[ 0 ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( v );\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function which splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `bifurcateByAsync` function which invokes the predicate function for each collection element sequentially:\n* var bifurcateByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* bifurcateByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn bifurcateByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction bifurcateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} results - bifurcation results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* bifurcateByAsync( files, predicate, done );\n*/\nfunction bifurcateByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split values into two groups according to a predicate function.\n*\n* @module @stdlib/utils-async-bifurcate-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import bifurcateByAsync from '@stdlib/utils-async-bifurcate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* bifurcateByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert-has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'count-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ] += 1;\n\t\t\t} else {\n\t\t\t\tout[ group ] = 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `countByAsync` function which invokes the indicator function for each collection element sequentially:\n* var countByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* countByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn countByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction countByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - counts\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* countByAsync( files, indicator, done );\n*/\nfunction countByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default countByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function and return group counts.\n*\n* @module @stdlib/utils-async-count-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import countByAsync from '@stdlib/utils-async-count-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* countByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport format from '@stdlib/string-format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByAsync( files, predicate, done );\n*/\nfunction everyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils-async-every-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import everyByAsync from '@stdlib/utils-async-every-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport format from '@stdlib/string-format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByRightAsync( files, predicate, done );\n*/\nfunction everyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils-async-every-by-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import everyByRightAsync from '@stdlib/utils-async-every-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachAsync` function which invokes `read` for each collection element sequentially:\n* var forEachAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachAsync( files, read, done );\n*/\nfunction forEachAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection.\n*\n* @module @stdlib/utils-async-for-each\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import forEachAsync from '@stdlib/utils-async-for-each';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachRightAsync` function which invokes `read` for each collection element sequentially:\n* var forEachRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachRightAsync( files, read, done );\n*/\nfunction forEachRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection, iterating from right to left.\n*\n* @module @stdlib/utils-async-for-each-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import forEachRightAsync from '@stdlib/utils-async-for-each-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport indexOf from '@stdlib/utils-index-of';\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert-has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'group-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ j ];\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ [ j, v ] ];\n\t\t\t\t}\n\t\t\t} else if ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ group ] = [ v ];\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `groupByAsync` function which invokes the indicator function for each collection element sequentially:\n* var groupByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* groupByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn groupByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction groupByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - group-by result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* groupByAsync( files, indicator, done );\n*/\nfunction groupByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default groupByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function.\n*\n* @module @stdlib/utils-async-group-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import groupByAsync from '@stdlib/utils-async-group-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* groupByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapAsync` function which invokes `read` for each collection element sequentially:\n* var inmapAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapAsync( files, read, done );\n*/\nfunction inmapAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place.\n*\n* @module @stdlib/utils-async-inmap\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import inmapAsync from '@stdlib/utils-async-inmap';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx -= 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapRightAsync` function which invokes `read` for each collection element sequentially:\n* var inmapRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapRightAsync( files, read, done );\n*/\nfunction inmapRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from '@stdlib/assert-is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place, iterating from right to left.\n*\n* @module @stdlib/utils-async-inmap-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import inmapRightAsync from '@stdlib/utils-async-inmap-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert-is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert-is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-function-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times, limiting the number of concurrently pending invocations, and returns an array of accumulated function return values.\n*\n* @private\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( n, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar out;\n\tvar lim;\n\tvar idx;\n\tvar m;\n\tvar i;\n\n\tdebug( 'Number of invocations: %d', n );\n\n\t// Note: we explicitly preallocate in order to facilitate inserting a function result into its associated output array index. This means we do not ensure \"fast\" elements for large output arrays.\n\tout = new Array( n );\n\tif ( n === 0 ) {\n\t\tdebug( 'Finished invoking a function.' );\n\t\treturn done( null, out );\n\t}\n\tif ( n < opts.limit ) {\n\t\tlim = n;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\n\tcount = 0;\n\tidx = -1;\n\tm = n - 1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all invocations...\n\t\tif ( idx < m ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to process the next function invocation.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Invocation number: %d', j );\n\t\tfcn.call( opts.thisArg, j, cb );\n\n\t\t/**\n\t\t* Callback invoked once a provided function completes.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further invocations:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tout[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next invocation.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Completed invocation %d of %d.', count, n );\n\t\tif ( idx < m ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === n ) {\n\t\t\tdebug( 'Finished invoking a function.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function `n` times and return an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} fcn - function to invoke\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes a function `n` times and returns an array of accumulated function return values\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* var mapFunAsync = factory( opts, fcn );\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* mapFunAsync( 10, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapFunAsync;\n\n\t/**\n\t* Invokes a function `n` times and returns an array of accumulated function return values.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} n - number of function invocations\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a nonnegative integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapFunAsync( n, done ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Number of function invocations must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {Array} results - results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before the next invocation\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} done - callback to invoke upon invoking a function `n` times\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\nfunction mapFunAsync( fcn, n, options, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( fcn )( n, options );\n\t}\n\tfactory( options, fcn )( n, done );\n}\n\n\n// EXPORTS //\n\nexport default mapFunAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function `n` times and return an array of accumulated function return values.\n*\n* @module @stdlib/utils-async-map-function\n*\n* @example\n* import mapFunAsync from '@stdlib/utils-async-map-function';\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from './main.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnum from './native.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from '@stdlib/assert-is-string';\nimport { isPrimitive as isnan } from '@stdlib/assert-is-nan';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport isEnum from './native.js';\nimport hasStringEnumBug from './has_string_enumerability_bug.js';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert-is-arguments\n*\n* @example\n* import isArguments from '@stdlib/assert-is-arguments';\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport hasArgumentsClass from './detect.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property';\nimport isArray from '@stdlib/assert-is-array';\nimport isInteger from '@stdlib/math-base-assert-is-integer';\nimport MAX_LENGTH from '@stdlib/constants-uint32-max';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants-uint32-max\n* @type {uinteger32}\n*\n* @example\n* import UINT32_MAX from '@stdlib/constants-uint32-max';\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nexport default UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert-is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property';\nimport noop from '@stdlib/utils-noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport indexOf from '@stdlib/utils-index-of';\nimport typeOf from '@stdlib/utils-type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport isArguments from '@stdlib/assert-is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from '@stdlib/utils-keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar value;\n\t\tvar key;\n\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\n\t\tvalue = obj[ key ];\n\t\tdebug( '%s: %s', key, JSON.stringify( value ) );\n\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, key, cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, key, value, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, key, value, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [key] - transformed key\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, key ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps keys from one object to a new object having the same values\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapKeysAsync = factory( opts, read );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapKeysAsync;\n\n\t/**\n\t* Maps keys from one object to a new object having the same values.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapKeysAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\nfunction mapKeysAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapKeysAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map keys from one object to a new object having the same values.\n*\n* @module @stdlib/utils-async-map-keys\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import mapKeysAsync from '@stdlib/utils-async-map-keys';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from '@stdlib/utils-keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar key;\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\t\tdebug( '%s: %s', key, JSON.stringify( obj[ key ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property value.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [value] - transformed value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, value ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps values from one object to a new object having the same keys\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapValuesAsync = factory( opts, getStats );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapValuesAsync;\n\n\t/**\n\t* Maps values from one object to a new object having the same keys.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapValuesAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\nfunction mapValuesAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapValuesAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map values from one object to a new object having the same keys.\n*\n* @module @stdlib/utils-async-map-values\n*\n* @example\n* var stat = require( 'fs' ).stat;\n* import mapValuesAsync from '@stdlib/utils-async-map-values';\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByAsync( files, predicate, done );\n*/\nfunction noneByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function.\n*\n* @module @stdlib/utils-async-none-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import noneByAsync from '@stdlib/utils-async-none-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByRightAsync( files, predicate, done );\n*/\nfunction noneByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils-async-none-by-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import noneByRightAsync from '@stdlib/utils-async-none-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceAsync` function which invokes `read` for each collection element concurrently:\n* var reduceAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\nfunction reduceAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* @module @stdlib/utils-async-reduce\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import reduceAsync from '@stdlib/utils-async-reduce';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceRightAsync` function which invokes `read` for each collection element concurrently:\n* var reduceRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceRightAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceRightAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\nfunction reduceRightAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* @module @stdlib/utils-async-reduce-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import reduceRightAsync from '@stdlib/utils-async-reduce-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants-array-max-array-length\n*\n* @example\n* import MAX_ARRAY_LENGTH from '@stdlib/constants-array-max-array-length';\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only functions.\n*\n* @module @stdlib/assert-is-function-array\n*\n* @example\n* import isFunctionArray from '@stdlib/assert-is-function-array';\n*\n* function beep() {}\n*\n* function boop() {}\n*\n* var bool = isFunctionArray( [ beep, boop ] );\n* // returns true\n*\n* bool = isFunctionArray( [ {}, beep ] );\n* // returns false\n*\n* bool = isFunctionArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport arrayfun from '@stdlib/assert-tools-array-like-function';\nimport isFunction from '@stdlib/assert-is-function';\n\n\n// MAIN //\n\nvar isFunctionArray = arrayfun( isFunction );\n\n\n// EXPORTS //\n\nexport default isFunctionArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLike from '@stdlib/assert-is-array-like';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* import isOdd from '@stdlib/assert-is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math-base-assert-is-integer';\nimport MAX_LENGTH from '@stdlib/constants-array-max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunctionArray from '@stdlib/assert-is-function-array';\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns a reusable waterfall function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n* @returns {Function} waterfall function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* var waterfall = factory( fcns, done );\n*\n* waterfall();\n* waterfall();\n* waterfall();\n*/\nfunction factory( fcns, clbk, thisArg ) {\n\tif ( !isFunctionArray( fcns ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of functions. Value: `%s`.', fcns ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn waterfall;\n\n\t/**\n\t* Executes functions in series, passing the results of one function as arguments to the next function.\n\t*\n\t* @private\n\t*/\n\tfunction waterfall() {\n\t\tvar idx = -1;\n\t\tnext(); // eslint-disable-line node/callback-return\n\n\t\t/**\n\t\t* Executes the next function in the series.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {...*} args - results to pass to next callback\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\t\t\tvar len;\n\t\t\tvar i;\n\n\t\t\t// Check for an error...\n\t\t\tif ( arguments[ 0 ] ) {\n\t\t\t\treturn clbk( arguments[ 0 ] );\n\t\t\t}\n\t\t\t// Update the counter and check if we have run all functions...\n\t\t\tidx += 1;\n\t\t\tif ( idx >= fcns.length ) {\n\t\t\t\treturn clbk();\n\t\t\t}\n\t\t\t// Copy the remaining arguments...\n\t\t\tlen = arguments.length;\n\t\t\targs = new Array( len );\n\t\t\tfor ( i = 0; i < len-1; i++ ) {\n\t\t\t\targs[ i ] = arguments[ i+1 ];\n\t\t\t}\n\t\t\t// Add the callback:\n\t\t\targs[ i ] = next;\n\n\t\t\t// Apply the arguments to the next function in the waterfall:\n\t\t\tfcns[ idx ].apply( thisArg, args );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Executes functions in series, passing the results of one function as arguments to the next function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\nfunction waterfall( fcns, clbk, thisArg ) {\n\tfactory( fcns, clbk, thisArg )();\n}\n\n\n// EXPORTS //\n\nexport default waterfall;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Execute functions in series, passing the results of one function as arguments to the next function.\n*\n* @module @stdlib/utils-async-series-waterfall\n*\n* @example\n* import waterfall from '@stdlib/utils-async-series-waterfall';\n*\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0; // processed element count\n\tidx = -1;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByAsync( files, 2, predicate, done );\n*/\nfunction someByAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils-async-some-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import someByAsync from '@stdlib/utils-async-some-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0; // processed element count\n\tidx = len;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByRightAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByRightAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\nfunction someByRightAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils-async-some-by-right\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import someByRightAsync from '@stdlib/utils-async-some-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport indexOf from '@stdlib/utils-index-of';\n\n\n// VARIABLES //\n\nvar debug = logger( 'tabulate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\ttmp = [];\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tvar i;\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Determine if we've seen the group/category before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\t\t\ti = indexOf( tmp, group );\n\t\t\tif ( i === -1 ) {\n\t\t\t\ttmp.push( group );\n\t\t\t\tout.push( [ group, 1, 0 ] );\n\t\t\t} else {\n\t\t\t\tout[ i ][ 1 ] += 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\t// Compute percentages...\n\t\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t\t\t}\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport format from '@stdlib/string-format';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for generating a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `tabulateByAsync` function which invokes the indicator function for each collection element sequentially:\n* var tabulateByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* tabulateByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn tabulateByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction tabulateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - frequency table\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* tabulateByAsync( files, indicator, done );\n*/\nfunction tabulateByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default tabulateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a frequency table according to an indicator function.\n*\n* @module @stdlib/utils-async-tabulate-by\n*\n* @example\n* import readFile from '@stdlib/fs-read-file';\n* import tabulateByAsync from '@stdlib/utils-async-tabulate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* tabulateByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name anyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by}\n*/\nimport anyByAsync from '@stdlib/utils-async-any-by';\nsetReadOnly( ns, 'anyByAsync', anyByAsync );\n\n/**\n* @name anyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by-right}\n*/\nimport anyByRightAsync from '@stdlib/utils-async-any-by-right';\nsetReadOnly( ns, 'anyByRightAsync', anyByRightAsync );\n\n/**\n* @name bifurcateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/bifurcate-by}\n*/\nimport bifurcateByAsync from '@stdlib/utils-async-bifurcate-by';\nsetReadOnly( ns, 'bifurcateByAsync', bifurcateByAsync );\n\n/**\n* @name composeAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/compose}\n*/\nimport composeAsync from '@stdlib/utils-async-compose';\nsetReadOnly( ns, 'composeAsync', composeAsync );\n\n/**\n* @name countByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/count-by}\n*/\nimport countByAsync from '@stdlib/utils-async-count-by';\nsetReadOnly( ns, 'countByAsync', countByAsync );\n\n/**\n* @name doUntilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-until}\n*/\nimport doUntilAsync from '@stdlib/utils-async-do-until';\nsetReadOnly( ns, 'doUntilAsync', doUntilAsync );\n\n/**\n* @name doWhileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-while}\n*/\nimport doWhileAsync from '@stdlib/utils-async-do-while';\nsetReadOnly( ns, 'doWhileAsync', doWhileAsync );\n\n/**\n* @name everyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by}\n*/\nimport everyByAsync from '@stdlib/utils-async-every-by';\nsetReadOnly( ns, 'everyByAsync', everyByAsync );\n\n/**\n* @name everyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by-right}\n*/\nimport everyByRightAsync from '@stdlib/utils-async-every-by-right';\nsetReadOnly( ns, 'everyByRightAsync', everyByRightAsync );\n\n/**\n* @name forEachAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each}\n*/\nimport forEachAsync from '@stdlib/utils-async-for-each';\nsetReadOnly( ns, 'forEachAsync', forEachAsync );\n\n/**\n* @name forEachRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each-right}\n*/\nimport forEachRightAsync from '@stdlib/utils-async-for-each-right';\nsetReadOnly( ns, 'forEachRightAsync', forEachRightAsync );\n\n/**\n* @name functionSequenceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/function-sequence}\n*/\nimport functionSequenceAsync from '@stdlib/utils-async-function-sequence';\nsetReadOnly( ns, 'functionSequenceAsync', functionSequenceAsync );\n\n/**\n* @name groupByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/group-by}\n*/\nimport groupByAsync from '@stdlib/utils-async-group-by';\nsetReadOnly( ns, 'groupByAsync', groupByAsync );\n\n/**\n* @name ifelseAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-else}\n*/\nimport ifelseAsync from '@stdlib/utils-async-if-else';\nsetReadOnly( ns, 'ifelseAsync', ifelseAsync );\n\n/**\n* @name ifthenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-then}\n*/\nimport ifthenAsync from '@stdlib/utils-async-if-then';\nsetReadOnly( ns, 'ifthenAsync', ifthenAsync );\n\n/**\n* @name inmapAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap}\n*/\nimport inmapAsync from '@stdlib/utils-async-inmap';\nsetReadOnly( ns, 'inmapAsync', inmapAsync );\n\n/**\n* @name inmapRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap-right}\n*/\nimport inmapRightAsync from '@stdlib/utils-async-inmap-right';\nsetReadOnly( ns, 'inmapRightAsync', inmapRightAsync );\n\n/**\n* @name mapFunAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-function}\n*/\nimport mapFunAsync from '@stdlib/utils-async-map-function';\nsetReadOnly( ns, 'mapFunAsync', mapFunAsync );\n\n/**\n* @name mapKeysAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-keys}\n*/\nimport mapKeysAsync from '@stdlib/utils-async-map-keys';\nsetReadOnly( ns, 'mapKeysAsync', mapKeysAsync );\n\n/**\n* @name mapValuesAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-values}\n*/\nimport mapValuesAsync from '@stdlib/utils-async-map-values';\nsetReadOnly( ns, 'mapValuesAsync', mapValuesAsync );\n\n/**\n* @name noneByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by}\n*/\nimport noneByAsync from '@stdlib/utils-async-none-by';\nsetReadOnly( ns, 'noneByAsync', noneByAsync );\n\n/**\n* @name noneByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by-right}\n*/\nimport noneByRightAsync from '@stdlib/utils-async-none-by-right';\nsetReadOnly( ns, 'noneByRightAsync', noneByRightAsync );\n\n/**\n* @name reduceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce}\n*/\nimport reduceAsync from '@stdlib/utils-async-reduce';\nsetReadOnly( ns, 'reduceAsync', reduceAsync );\n\n/**\n* @name reduceRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce-right}\n*/\nimport reduceRightAsync from '@stdlib/utils-async-reduce-right';\nsetReadOnly( ns, 'reduceRightAsync', reduceRightAsync );\n\n/**\n* @name waterfall\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/series-waterfall}\n*/\nimport waterfall from '@stdlib/utils-async-series-waterfall';\nsetReadOnly( ns, 'waterfall', waterfall );\n\n/**\n* @name someByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by}\n*/\nimport someByAsync from '@stdlib/utils-async-some-by';\nsetReadOnly( ns, 'someByAsync', someByAsync );\n\n/**\n* @name someByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by-right}\n*/\nimport someByRightAsync from '@stdlib/utils-async-some-by-right';\nsetReadOnly( ns, 'someByRightAsync', someByRightAsync );\n\n/**\n* @name tabulateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/tabulate-by}\n*/\nimport tabulateByAsync from '@stdlib/utils-async-tabulate-by';\nsetReadOnly( ns, 'tabulateByAsync', tabulateByAsync );\n\n/**\n* @name trycatchAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-catch}\n*/\nimport trycatchAsync from '@stdlib/utils-async-try-catch';\nsetReadOnly( ns, 'trycatchAsync', trycatchAsync );\n\n/**\n* @name trythenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-then}\n*/\nimport trythenAsync from '@stdlib/utils-async-try-then';\nsetReadOnly( ns, 'trythenAsync', trythenAsync );\n\n/**\n* @name untilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/until}\n*/\nimport untilAsync from '@stdlib/utils-async-until';\nsetReadOnly( ns, 'untilAsync', untilAsync );\n\n/**\n* @name whileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/while}\n*/\nimport whileAsync from '@stdlib/utils-async-while';\nsetReadOnly( ns, 'whileAsync', whileAsync );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = composeAsync( c, b, a );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction composeAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction composite() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = nFuncs - 1;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a composed function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti -= 1;\n\t\t\tif ( i < 0 ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default composeAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doUntilAsync( fcn, predicate, done );\n*/\nfunction doUntilAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doUntilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doWhileAsync( fcn, predicate, done );\n*/\nfunction doWhileAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doWhileAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Function sequence.\n*\n* @param {...Function} f - functions to evaluate in sequential order\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} pipeline function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = funseqAsync( a, b, c );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction funseqAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to execute sequentially.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction pipeline() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = 0;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a provided function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tif ( i === nFuncs ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default funseqAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, returns `x`; otherwise, returns `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {*} x - value to return if a condition is truthy\n* @param {*} y - value to return if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random-base-randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifelseAsync( predicate, 1.0, -1.0, done );\n*/\nfunction ifelseAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn done( null, x );\n\t\t}\n\t\tdone( null, y );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifelseAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, invokes `x`; otherwise, invokes `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random-base-randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, 1.0 );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifthenAsync( predicate, x, y, done );\n*/\nfunction ifthenAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk1 );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn x( clbk2 );\n\t\t}\n\t\ty( clbk2 );\n\t}\n\n\t/**\n\t* Callback invoked by either `x` or `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifthenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a callback with a value `y`.\n*\n* @param {Function} x - function to invoke\n* @param {*} y - value to return if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random-base-randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         console.log( error.message );\n*     }\n*     console.log( result );\n* }\n*\n* trycatchAsync( x, -1.0, done );\n*/\nfunction trycatchAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {*} result - result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error, y );\n\t\t}\n\t\tdone( null, result );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trycatchAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a second function `y`.\n*\n* @param {Function} x - function to invoke\n* @param {Function} y - function to invoke if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random-base-randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* trythenAsync( x, y, done );\n*/\nfunction trythenAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk1 );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tif ( y.length === 1 ) {\n\t\t\t\treturn y( clbk2 );\n\t\t\t}\n\t\t\treturn y( error, clbk2 );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked by `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trythenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* untilAsync( predicate, fcn, done );\n*/\nfunction untilAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default untilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* whileAsync( predicate, fcn, done );\n*/\nfunction whileAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whileAsync;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$1","setReadOnly","configurable","enumerable","writable","setNonEnumerableReadOnly","isBoolean","FLG","Symbol","hasToStringTagSupport","toStringTag","has","hasOwnProperty","hasOwnProp","property","Sym","toStrTag","nativeClass","hasToStringTag","v","isOwn","tag","Bool","Boolean","test","isPrimitive","isObject","self","window","global","globalThis","root","codegen","Function","GlobalThis","Self","Win","Global","getGlobal","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","main$3","isObjectLike","constructorName","name","ctor","constructor","_isBuffer","isBuffer","predicate","len","arrayfun","ctorName","type","isFunction","typeOf","floor","isInteger","x","MAX_TYPED_ARRAY_LENGTH","isCollection","MAX_LENGTH","FLOAT64_PINF","Number","POSITIVE_INFINITY","getProto","Obj","getPrototypeOf","proto","getProto$1","objectPrototype","isPlainObject","isPrototypeOf","key","ownProps","main$1","FLOAT64_NINF","NEGATIVE_INFINITY","PINF","NINF","isInt","valueOf","isPositiveInteger","debug","require$$0","factory","options","opts","thisArg","series","limit","validate","collection","done","maxIndex","count","flg","lim","idx","next","JSON","stringify","clbk","error","result","message","bool","anyByAsync","anyByRightAsync","isNan","isString","arr","searchElement","fromIndex","returns","join","cb","results","bifurcateByAsync","indicator","group","countByAsync","everyByAsync","everyByRightAsync","fcn","forEachAsync","forEachRightAsync","groupByAsync","inmapAsync","inmapRightAsync","isNonNegativeInteger","m","mapFunAsync","keys","isArguments","bool$5","detect","hasArgumentsClass","isEnumerableProperty","propertyIsEnumerable","hasStringEnumBug","isEnum","isArguments$1","isConstructorPrototype","w","hasAutomationEqualityBug","k","win","EXCLUDED_KEYS","check","HAS_BUILTIN","skipConstructor","skipPrototype","isFcn","p","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","NON_ENUMERABLE","transform","objectKeys","mapKeysAsync","mapValuesAsync","noneByAsync","noneByRightAsync","initial","acc","reduceAsync","reduceRightAsync","MAX_ARRAY_LENGTH","isFunctionArray","isArrayLike","fcns","waterfall","cnt","someByAsync","someByRightAsync","tmp","tabulateByAsync","ns","nFuncs","onPredicate","unshift","y","clbk2","nargs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246]}